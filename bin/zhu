#! /usr/bin/env node
const program = require("commander")
// chalk 使用 4.0.0
const chalk = require("chalk")
var figlet = require('figlet');

program.version(`tsk-cli@${require("../package.json").version}`)
.usage(`<command> [options]`)

//1. 创建项目 

//2. 更改配置文件
program.command("create <app-name>")
.description("创建一个项目")
//  tsk-cli create -h 可以看到
.option("-f,--force","强制替换当前项目如果重名")
.action((name,cmd)=>{
  console.log(
    chalk.red.bgBlack(
      figlet.textSync('T s k - C l i',{
        whitespaceBreak:80,
        width: 80,
      })
    )
  ) 
  // tsk-cli create xxxx -f
  // xxxx { force: true }
  require("../lib/create")(name,cmd)
})


// vue config --get a  => 获取值
// vue config --set a 1 => 配置文件中设置

// [] 命令后面加了个参数
// < >表示配置后面加了个参数
program.command("config [value]")
// tsk-cli -h 可以看到
.description("创建配置项")
.option("-g, --get <path>","从选项中获取值")
.option("-s, --set <path> <value>","从选项中获取值")
.option("-d, --delete <path>","删除配置文件")
.action((value,cmd)=>{
  // tsk-cli config --set a 1 ==> 1 { set: 'a' }
  // tsk-cli config --get a ==> undefined { get: 'a' }
  console.log(value,cmd)
})

program.on("--help",function(){
  console.log()
  console.log(`Run tsk ${chalk.cyan(`tsk-cli<commadn> --help`)} show details `)
  console.log()
})


program.parse(process.argv)